---

- name: Check Existence of Libraries
  become: true
  stat:
    path: "{{ jboss_eap_library_dest_dir + '/' + jboss_eap_home_dir_name + '/version.txt' }}"
  register: jboss_eap_exists

- name: Check if zip source file for jboss {{ jboss_version }} exists
  stat:
    path: "/tmp/jboss-eap-{{ jboss_version }}.zip"
  register: jboss_ressource
  when: not jboss_eap_exists.stat.exists

- name: Set JBoss EAP Download Facts
  set_fact:
    jboss_eap_artifact_dl_dest: "{{ jboss_eap_artifacts_dl_dest_dir }}/{{ jboss_eap_artifact_name }}"

 
- name: Create JBoss EAP Group
  group:
    name: "{{ jboss_eap_group }}"
    system: yes
    state: present
    gid: "{{ jboss_eap_group_gid | default('400') }}"

- name: Create JBoss EAP User
  user:
    name: "{{ jboss_eap_user }}"
    comment: "JBoss EAP User"
    uid: "{{ jboss_eap_user_uid | default('400') }}"
    group: "{{ jboss_eap_group }}"
    home: "{{ jboss_eap_library_dest_dir }}"
    shell: "/bin/bash"

- name: download sources jboss {{ jboss_version }}
  get_url:
    url: "https://access.cdn.redhat.com/content/origin/files/sha256/5f/5f1f0b7a389dedcd6f91ea3c8c6c9b723e9e8609bdf5720d4088e5469d46ad3a/jboss-eap-7.4.0.zip?_auth_=1688570676_2d6f6b9da2695dc972210a62ae9f1f54"
    dest: "/tmp/{{ jboss_version }}.zip"
  when: not jboss_eap_exists.stat.exists

- name: Set JBoss EAP Service Directories Facts
  set_fact:
    jboss_eap_home: "{{ jboss_eap_library_dest_dir }}/{{ jboss_eap_home_dir_name }}"

- name: Extract JBoss EAP Libraries
  become: true
  unarchive:
    src: "{{ jboss_eap_artifact_dl_dest }}"
    dest: "{{ jboss_eap_library_dest_dir }}"
    creates: "{{ jboss_eap_home_dir_name }}"
    copy: no
    owner: "{{ jboss_eap_user }}"
    group: "{{ jboss_eap_group }}"
  when: not jboss_eap_exists.stat.exists | bool